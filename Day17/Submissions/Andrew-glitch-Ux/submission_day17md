# Day 17 Submission

## Personal Information
- **Name:** [Andrew Muntet]
- **Date:** [24-06-2024]
- **GitHub Username:** [Andrew-glitch-Ux]

## Task Completion
- [X] Read Chapter 9 of "Terraform: Up & Running"
- [X] Completed Required Hands-on Labs
- [X] High-Availability Hello-World App Deployment with Terraform Modules
- [x] High-Availability Terraform Web Server Deployment Using Reusable Modules
- [X] Created Infrastructure Diagrams

## Infrastructure Details

## High-Availability Hello-World App Deployment with Terraform Modules

- Created reusable Terraform modules for public subnets (`public_subnet_a` and `public_subnet_b`)
- Deployed a VPC with CIDR block input from `.tfvars`
- Created and attached two public subnets in separate AZs for load balancer redundancy
- Deployed an Application Load Balancer (ALB) across both public subnets
- Provisioned a Bastion Host in one of the public subnets for SSH access
- Launched Auto Scaling Group (ASG) instances in private subnets behind the ALB
- Defined all variables in `.tfvars`, avoiding any hardcoded infrastructure parameters
- Validated modules and resources using `terraform init`, `validate`, and corrected path/module errors
- Ensured the ALB routes traffic to the ASG instances and passes health checks
- Established secure access via SSH keypair to Bastion Host for EC2 instance debugging

### High-Availability Terraform Web Server Deployment Using Reusable Modules
## Key Infrastructure Components

- **VPC**  
  Provisioned a Virtual Private Cloud with a custom CIDR block, entirely defined through `.tfvars` inputs.
- **Public Subnets**  
  Created two public subnets in separate Availability Zones (`eu-north-1a` and `eu-north-1b`) to enable fault-tolerant load balancing.
- **Application Load Balancer (ALB)**  
  Configured an internet-facing ALB that spans both public subnets and performs health checks. This ALB serves as the entry point for web traffic.
- **Auto Scaling Group (ASG)**  
  Launched EC2 instances using an Auto Scaling Group. The ASG is attached to the ALB’s target group and uses a Launch Template with a user data script that serves a "Hello, World" webpage.

## Infrastructure Diagrams
Please place your infrastructure diagrams in the `architecture` folder with the following files:
- `single-server.png` - Diagram for the single server deployment
- `web-server.png` - Diagram for the web server deployment

## Blog Post
- **Title:** [Your Blog Post Title]
- **Link:** [URL to your blog post]

## Social Media
- **Platform:** [LinkedIn]
- **Post Link:** [https://www.linkedin.com/feed/update/urn:li:activity:7343705090878291969/ ]

## Notes and Observations
[ I learnt much on testing and the testings needed in Dev and the usage frequency
so the : 
End-to-End Tests (fewest, slowest, most brittle)
Integration Tests
Unit Tests (most frequent, fastest, most reliable)
Understanding unit testing was actually tough but atleast from the previous lab on production grade infrastructure I tried relating the flow and atleaast understood unit testing completely]

## Additional Resources Used
[terraform Up & Running book]

## Time Spent
- Reading: [3 hours]
- Infrastructure Deployment: [1.5 hours]
- Diagram Creation: [30 mins]
- Blog Writing: [20 mins]
- Total: [ 5 hours 20 mins]

## Repository Structure
```
Day17/
└── Submissions/
└── Andrew-glitch-Ux/
├── Architecture/
│ ├── lab18.drawio.png
│ └── lab19.drawio
    ── lab18/
        ├──examples
            │ ├── .terraform/
            │ │ └── modules/
            │ │ │ ├── modules.json
            │ │ │ └── providers/
            │ │ │ ├── LICENSE.txt
            │ │ │ └── terraform-provider-aws_v5.100.0_x5.exe
            ├──.terraform.lock.hcl
            ├── main.tf
        │ │   ├── outputs.tf
            ├── README.md
            ├── terraform.tfstate
            ├── terraform.tfvars
            ├── variables.tf
        └── modules/
        │ ├── alb/
        │ │ ├── main.tf
        │ │ ├── outputs.tf
        │ │ └── variables.tf
        │ ├── asg-rolling-deploy/
        │ │ ├── main.tf
        │ │ ├── outputs.tf
        │ │ └── variables.tf
        ├──   bastion-host/
        │ │ ├── main.tf
        │ │ ├── outputs.tf
        │ │ └── variables.tf
        ├──   private-subnet/
        │ │ ├── main.tf
        │ │ ├── outputs.tf
        │ │ └── variables.tf
        ├──   subnet/
        │ │ ├── main.tf
        │ │ ├── outputs.tf
        │ │ └── variables.tf
        ├──   vpc/
        │ │ ├── main.tf
        │ │ ├── outputs.tf
        │ │ └── variables.tf
        ── test\hello-world-app/
        │ ├── main_test.go/
            lab 19/
        ├── examples/
                ├──.terraform/
            │ │ └── modules/
            │ │ │ ├── modules.json
            │ │ └── providers/
            │ │ │ ├── LICENSE.txt
            │ │ │ └── terraform-provider-aws_v5.100.0_x5.exe
                ├──.terraform.lock.hcl
        │       ├── main.tf
        │       ├── variables.tf
        │       ├── outputs.tf
                ├── terraform.tfvars
        ├── modules/
        │   ├── vpc/
        │   │   ├── main.tf
        │   │   ├── variables.tf
        │   │   ├── outputs.tf
        │   ├── alb/
        │   │   ├── main.tf
        │   │   ├── variables.tf
        │   │   ├── outputs.tf
        │   ├── asg/
        │   │   ├── main.tf
        │   │   ├── variables.tf
        │   │   ├── outputs.tf
        ├── test/
        │   └── terratest/
        │       └── complete_test.go
        ├── daily update.md
        ├── submission day 17.md
    └── README.md
    ├── submission_template.md
    └── tasks.md
``` 



