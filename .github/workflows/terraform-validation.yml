name: Terraform Validation

on:
  pull_request:
    branches:
      - 'week*'
    paths:
      - '**/Submissions/**/*.tf'
      - '**/Submissions/**/*.tfvars'

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Find Changed Directories
        id: changed_dirs
        run: |
          DIRS=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '\.tf$' | xargs -I {} dirname {} | sort -u | grep 'Submissions/')
          echo "Changed Terraform directories:"
          echo "$DIRS"
          echo "dirs=$DIRS" >> $GITHUB_OUTPUT

      - name: Check File Structure
        run: |
          for dir in ${{ steps.changed_dirs.outputs.dirs }}; do
            echo "Checking $dir..."
            required_files=("main.tf" "variables.tf" "outputs.tf" "README.md")
            for file in "${required_files[@]}"; do
              if [ ! -f "$dir/$file" ]; then
                echo "❌ Missing required file: $dir/$file"
                exit 1
              fi
            done
            echo "✅ File structure check passed for $dir"
          done

      - name: Terraform Format Check
        run: |
          for dir in ${{ steps.changed_dirs.outputs.dirs }}; do
            echo "Checking format in $dir..."
            cd "$dir"
            terraform fmt -check -recursive
            if [ $? -ne 0 ]; then
              echo "❌ Terraform format check failed in $dir"
              echo "Please run 'terraform fmt' to fix formatting"
              exit 1
            fi
            cd - > /dev/null
            echo "✅ Format check passed for $dir"
          done

      - name: Initialize and Validate Terraform
        run: |
          for dir in ${{ steps.changed_dirs.outputs.dirs }}; do
            echo "Validating $dir..."
            cd "$dir"
            
            # Initialize Terraform
            terraform init -backend=false
            
            # Validate Terraform configuration
            terraform validate
            
            if [ $? -ne 0 ]; then
              echo "❌ Terraform validation failed in $dir"
              exit 1
            fi
            
            cd - > /dev/null
            echo "✅ Terraform validation passed for $dir"
          done

      - name: Security Checks
        run: |
          for dir in ${{ steps.changed_dirs.outputs.dirs }}; do
            echo "Running security checks in $dir..."
            cd "$dir"
            
            # Check for hardcoded credentials
            if grep -r "access_key\|secret_key\|password\|token" *.tf; then
              echo "❌ Found potential hardcoded credentials in $dir"
              exit 1
            fi
            
            # Check for public access in security groups
            if grep -r "0.0.0.0/0" *.tf; then
              echo "⚠️ Warning: Found potential unrestricted access (0.0.0.0/0) in $dir"
              echo "Please ensure this is intentional and documented"
            fi
            
            # Check for required tags
            if ! grep -r "tags\s*=" *.tf; then
              echo "❌ Missing resource tags in $dir"
              exit 1
            fi
            
            cd - > /dev/null
            echo "✅ Security checks passed for $dir"
          done

      - name: Comment PR
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Terraform Validation Results
            
            #### File Structure Check
            ${process.env.FILE_STRUCTURE_OUTPUT || '✅ Passed'}
            
            #### Format Check
            ${process.env.FORMAT_CHECK_OUTPUT || '✅ Passed'}
            
            #### Validation Check
            ${process.env.VALIDATION_OUTPUT || '✅ Passed'}
            
            #### Security Check
            ${process.env.SECURITY_CHECK_OUTPUT || '✅ Passed'}
            
            Please make sure to:
            - Run \`terraform fmt\` before committing
            - Include all required files (main.tf, variables.tf, outputs.tf, README.md)
            - Remove any hardcoded credentials
            - Add proper resource tags
            - Document any intentional public access
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            }) 